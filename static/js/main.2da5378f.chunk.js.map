{"version":3,"sources":["Human.js","App.js","serviceWorker.js","store/reducers.js","index.js"],"names":["Human","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startStep","distance","callback","clearTimeout","rotationTimeout","setState","animated","y","state","leftFootOffset","leftBoatOffset","rightFootOffset","boatHeight","rightBoatOffset","afterRotate","setTimeout","continueStep","deg","steps","Math","sin","deg2rad","x","cos","rotate","finishStep","turnNear","toPoint","point","deltaX","deltaY","angle","atan2","PI","dAngle","newDistanceToPoint","sqrt","stepDistance","degrees","handleClick","e","nextGoal","goals","length","goal","enteredToOffice","random","window","innerHeight","privacySpace","queues","myNumber","push","code","currentGoal","shift","iAmGoing","windowNumber","indexOf","innerWidth","floor","console","log","timeout","span","turnDelay","checkQueue","queue","times","serviceTime","newNumber","queued","queueCheckTimer","number","selected","showATM","event","willBeWait","service","chosenService","newGoal","serviceTimer","setInterval","clearInterval","keys","randomKey","windowed","round","queueLength","update","quited","newY","kill","id","iAmChosen","kind","onClick","select","bodyOffset","footLength","footWidth","bodyHeight","boatWidth","atmQueuePosition","pay","get-mail","get-box","get-money","get-package","send-mail","send-box","send-money","send-documents","_this2","document","addEventListener","flareAngle","react_default","a","createElement","className","concat","style","transform","top","height","Component","connect","ownProps","people","dispatch","index","type","payload","App","moveGoal","goalX","clientX","goalY","clientY","ATMDisplay","menu","hideATM","toGet","toSend","toPay","toChill","toGetMail","toGetBox","toGetMoney","toGetPackage","toSendMail","toSendBox","toSendMoney","toSendDocuments","humanChosen","secondInterval","myCode","waitFor","i","minutes","seconds","waitForMinutes","waitForSeconds","code2","split","ticketNumber","updateMe","population","removeEventListener","workerItems","map","src_Human_0","key","toString","ticketClass","selectedHuman","display","width","points","fill","Boolean","location","hostname","match","initialState","last_id","serviced","waitingTimeSum","rootReducer","array","arguments","undefined","action","objectSpread","toConsumableArray","human_index","filter","_","store","createStore","rand","getState","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2da5378f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Human.css'\nimport { connect } from 'react-redux'\n\nclass Human extends Component {\n    deg;\n    stepDistance;\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: props.x,\n            y: props.y,\n            animated: true,\n            leftFootOffset: 0,\n            rightFootOffset: 0,\n            leftBoatOffset: 1,\n            rightBoatOffset: 1,\n            bodyOffset: 0,\n            rotate: props.deg,\n            afterRotate: 0,\n            iAmChosen: false,\n\n            footLength: 20,\n            footWidth: 16.5,\n            bodyHeight: 17.2,\n            boatWidth: 13.5,\n            boatHeight: 22,\n        };\n\n        if (this.props.kind === 'client') {\n            this.atmQueuePosition = window.queues[0].length;\n            this.windowNumber = 0;\n            this.queueLength = 0;\n            this.enteredToOffice = false;\n            this.iAmGoing = false;\n            this.goal = 'atm';\n            this.goals = [\n                [120, 260],\n                [200, 250 - Math.random() * 50],\n                [270, 270],\n                [290 + Math.random() * 20 - 10, window.innerHeight - 170 - window.privacySpace * window.queues[0].length]\n            ];\n        }\n\n        this.service = {\n            'pay': 10,\n            'get-mail': 7,\n            'get-box': 15,\n            'get-money': 18,\n            'get-package': 6,\n            'send-mail': 12,\n            'send-box': 25,\n            'send-money': 9,\n            'send-documents': 8,\n        };\n\n        this.chosenService = '0';\n    }\n\n    startStep = (distance, callback) => {\n        clearTimeout(this.rotationTimeout);\n        this.setState({\n            animated: true,\n            y: this.state.y - distance,\n            leftFootOffset: distance,\n            leftBoatOffset: distance,\n            rightFootOffset: -distance - this.state.boatHeight * 0.45,\n            rightBoatOffset: -distance,\n            afterRotate: 0\n        },\n        () => {\n            // const that = this;\n            setTimeout(() => {\n                if (typeof callback === 'function') {\n                    callback();\n                }\n            }, 300);\n        });\n    };\n\n    continueStep = (distance, deg, steps, callback) => {\n        this.setState({\n                animated: true,\n                y: this.state.y - distance * 2 * Math.sin(this.deg2rad(deg + 90)),\n                x: this.state.x - distance * 2 * Math.cos(this.deg2rad(deg + 90)),\n                leftFootOffset: this.state.leftFootOffset < 0 ? distance : -distance,\n                leftBoatOffset: this.state.leftBoatOffset < 0 ? distance : -distance, // + this.state.boatHeight * 0.45,\n                rightFootOffset: this.state.rightFootOffset < 0 ? distance : -distance,\n                rightBoatOffset: this.state.rightBoatOffset < 0 ? distance : -distance,\n                rotate: deg,\n            },\n            () => {\n                setTimeout(() => {\n                    if (steps > 0) {\n                        this.continueStep(distance, deg, steps - 1, callback);\n                    } else if (typeof callback === 'function') {\n                        callback();\n                    }\n                }, 300);\n            });\n    };\n\n    finishStep = (distance, callback) => {\n        this.turnNear(0);\n        this.setState({\n            animated: true,\n            y: this.state.y - distance * Math.sin(this.deg2rad(this.state.rotate + 90)),\n            x: this.state.x - distance * Math.cos(this.deg2rad(this.state.rotate + 90)),\n            leftFootOffset: 0,\n            leftBoatOffset: 0, // + this.state.boatHeight * 0.45,\n            rightFootOffset: 0,\n            rightBoatOffset: 0,\n        },\n        () => {\n            setTimeout(() => {\n                if (typeof callback === 'function') {\n                    callback();\n                }\n            }, 300);\n        });\n    };\n\n    toPoint = (point, callback) => {\n        const deltaX = this.state.x - point[0];\n        const deltaY = this.state.y - point[1];\n        let angle = Math.atan2(deltaY, deltaX) * (180 / Math.PI) - 90;\n\n        const dAngle = (this.state.rotate - angle) % 360;\n        // console.log(this.state.rotate, angle, dAngle);\n        if (dAngle > 180) {\n            // console.log('+');\n            angle += 360;\n        }\n        if (dAngle < -180) {\n            // console.log('-');\n            angle -= 360;\n        }\n\n        const newDistanceToPoint = Math.sqrt( deltaX*deltaX + deltaY*deltaY);\n\n        this.continueStep(this.props.stepDistance, angle, newDistanceToPoint / (this.props.stepDistance * 2) - 2, () => {\n            if (typeof callback === 'function') {\n                callback();\n            }\n        });\n    };\n\n    deg2rad = (degrees) => {\n        return degrees * Math.PI/180;\n    };\n\n    handleClick = (e) => {\n        // console.log(e);\n        // this.setState({iAmChosen: false}, () => {});\n    };\n\n    nextGoal = (callback) => {\n        if (this.goals.length > 0) {\n            if (this.goal === 'atm' && this.goals.length === 1 && !this.enteredToOffice) {\n                this.enteredToOffice = true;\n                this.goals[0] = [290 + Math.random() * 20 - 10, window.innerHeight - 170 - window.privacySpace * window.queues[0].length];\n                this.myNumber = window.queues[0].length;\n                window.queues[0].push(this.props.code);\n            }\n            this.toPoint(this.goals[0], () => {\n                this.nextGoal(callback);\n            });\n            this.currentGoal = this.goals[0];\n            this.goals.shift();\n        } else {\n            if (this.iAmGoing && this.myNumber !== window.queues[this.windowNumber].indexOf(this.props.code)) {\n                this.myNumber = window.queues[this.windowNumber].indexOf(this.props.code);\n                this.goals = [\n                    [window.innerWidth - 280 - window.privacySpace * this.myNumber + Math.floor(Math.random() * 5) - 10, this.windowNumber * (window.innerHeight * 0.8) / 4 + Math.floor(Math.random() * 20) - 10],\n                ];\n                console.log('aha', this.myNumber, window.queues[this.windowNumber].indexOf(this.props.code));\n                this.nextGoal(callback);\n                return;\n            }\n            const deltaX = this.state.x - this.currentGoal[0];\n            const deltaY = this.state.y - this.currentGoal[1];\n            const distance = Math.sqrt( deltaX*deltaX + deltaY*deltaY);\n            this.finishStep(distance, () => {\n                this.iAmGoing = false;\n                if (typeof callback === 'function') {\n                    callback();\n                }\n            });\n        }\n    };\n\n    turnNear = (timeout) => {\n        this.rotationTimeout = setTimeout(() => {\n            const span = 60;\n            this.setState({afterRotate: Math.random() * span - span / 2}, () => {\n                this.turnNear(Math.random() * this.turnDelay + 1000);\n            });\n        }, timeout);\n    };\n\n    checkQueue = (queue, times, serviceTime) => {\n        const newNumber = queue.indexOf(this.props.code);\n        // console.log(window.queues[0]);\n\n        if (this.myNumber === 0) {\n            if (this.goal === 'atm') {\n                window.number++;\n            }\n            if (this.props.selected && this.goal === 'atm') {\n                this.props.showATM((event) => {\n                    console.log(event);\n                    this.willBeWait = this.service[event];\n                    this.chosenService = event;\n                    queue.shift();\n                    times.shift();\n\n                    this.newGoal();\n                });\n            } else {\n                const serviceTimer = setInterval(() => {\n                    times[0]--;\n                }, 1000);\n                setTimeout(() => {\n                    clearInterval(serviceTimer);\n                    const keys = Object.keys(this.service);\n                    const randomKey = keys[Math.floor(Math.random() * keys.length)];\n                    setTimeout(() => {\n                        times.shift();\n                        queue.shift();\n                    }, 700);\n                    this.willBeWait = this.service[randomKey];\n                    this.chosenService = randomKey;\n                    this.newGoal();\n                    console.log(this.willBeWait, randomKey, this.service[randomKey]);\n                }, serviceTime);\n            }\n            clearTimeout(this.queueCheckTimer);\n            return;\n        }\n\n        if (newNumber !== this.myNumber) {\n            this.myNumber = newNumber;\n            this.props.queued(newNumber, this.props.code);\n            if (this.goal === 'atm') {\n                this.goals = [\n                    [290 + Math.random() * 20 - 10, window.innerHeight - 170 - (window.privacySpace * this.myNumber)]\n                ];\n            } else if (this.goal === 'window') {\n                this.goals = [\n                    [window.innerWidth - 280 - window.privacySpace * this.myNumber + Math.floor(Math.random() * 5) - 10, this.windowNumber * (window.innerHeight * 0.8) / 4 + Math.floor(Math.random() * 20) - 10],\n                ];\n            }\n            this.startStep(5, () => {\n                this.nextGoal(() => {\n                    this.checkQueue(queue, times, serviceTime);\n                });\n            });\n            clearTimeout(this.queueCheckTimer);\n            return;\n            // console.log(this.props.code, this.myNumber);\n        }\n\n        this.queueCheckTimer = setTimeout(() => {\n            this.checkQueue(queue, times, serviceTime);\n        }, 500);\n    };\n\n    newGoal = () => {\n        clearTimeout(this.queueCheckTimer);\n        switch (this.goal) {\n            case 'atm':\n                this.goal = 'window';\n                this.props.windowed(this.props.code);\n                const windowNumber = Math.round(Math.random() * 3 + 1);\n                console.log(windowNumber);\n                this.windowNumber = windowNumber;\n\n                this.goals = [\n                    [400, window.innerHeight - 230],\n                    [window.innerWidth - 280 - window.privacySpace * window.queueLength, windowNumber * (window.innerHeight * 0.8) / 4],\n                    [window.innerWidth - 280 - window.privacySpace * window.queues[windowNumber].length + Math.floor(Math.random() * 5) - 10, windowNumber * (window.innerHeight * 0.8) / 4 + Math.floor(Math.random() * 20) - 10],\n                ];\n                window.queues[windowNumber].push(this.props.code);\n                window.times[windowNumber].push(this.willBeWait);\n                this.myNumber = window.queues[windowNumber].indexOf(this.props.code);\n                this.iAmGoing = true;\n                setTimeout(() => {\n                    this.startStep(this.props.stepDistance, () => {\n                        this.nextGoal(() => {\n                            this.checkQueue(window.queues[windowNumber], window.times[windowNumber], this.willBeWait * 1000);\n                        });\n                    });\n                }, 100);\n                this.props.update(this.windowNumber, this.chosenService, this.myNumber, this.props.code, this.goal);\n                break;\n\n            case 'window':\n                this.goal = 'quit';\n                this.props.quited(this.props.code);\n                const newY = this.state.y + (Math.random() < 0.5 ? -1 : 1) * 80;\n                this.goals = [\n                    [this.state.x, newY],\n                    [window.innerWidth - 290 - window.privacySpace * window.queueLength, newY],\n                    [300, 150 + Math.random() * 50],\n                    [100, 125 + Math.random() * 50],\n                    [Math.random() * 700 - 540, -200]\n                ];\n                setTimeout(() => {\n                    this.startStep(this.props.stepDistance, () => {\n                        this.nextGoal(() => {\n                            this.props.kill(this.props.id);\n                        });\n                    });\n                }, 100);\n\n                break;\n\n            default:\n                console.log('opa');\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleClick, false);\n        this.setState({'rotate': this.props.deg}, () => {});\n        switch (this.props.kind) {\n            case 'client':\n                this.turnDelay = 5000;\n                this.startStep(this.props.stepDistance, () => {\n                    this.nextGoal(() => {\n                        this.checkQueue(window.queues[0], window.times[0],1500);\n                    });\n                });\n                break;\n\n            case 'worker':\n                this.turnDelay = 1000;\n                this.turnNear(0);\n                // this.setState({\n                //     leftFootOffset: 30,\n                //     rightFootOffset: 30,\n                // }, () => {});\n                break;\n\n            default:\n                console.log('heh');\n        }\n        // this.toPoint(150, 300);\n    };\n\n    // componentWillUnmount() {\n    //     document.removeEventListener('click', this.handleClick, false);\n    // }\n\n    iAmChosen = () => {\n        // this.setState({iAmChosen: true}, () => {});\n        if (this.props.kind !== 'worker') {\n            this.props.onClick(this.windowNumber, this.chosenService, this.myNumber, this.props.code, this.goal);\n            this.props.select(this.props.id);\n        }\n    };\n\n    render() {\n        const flareAngle = this.state.rotate + this.state.afterRotate - 120;\n        // let humanClass = 'Human';\n        // if (this.props.kind === 'worker') {\n        //     humanClass += ' worker';\n        // }\n        // if (this.state.iAmChosen) {\n        //     humanClass += ' chosen'\n        // }\n        return (\n            <div className={\n                     `Human ${this.props.kind === 'worker' ? 'worker' : ''} ${this.state.animated ? '' : 'non-transition'} ${this.props.selected ? 'chosen' : ''}`\n                 }\n                 onClick={this.iAmChosen}\n                 style={{\n                     transform: 'translate('+ this.state.x +'px, '+ this.state.y +'px) rotate(' + (this.state.rotate + this.state.afterRotate) + 'deg)',\n                 }}>\n                <div className=\"boats\">\n                    <div className=\"left boat\"\n                        style={{top: this.state.bodyHeight / 2 - this.state.boatHeight / 2\n                                        - this.state.leftBoatOffset + 'px'}}/>\n                    <div className=\"right boat\"\n                         style={{top: this.state.bodyHeight / 2 - this.state.boatHeight / 2\n                                        - this.state.rightBoatOffset + 'px'}}/>\n                </div>\n                <div className=\"foots\">\n                    <div className=\"left foot\"\n                        style={{height: this.state.leftFootOffset * (1 - 2 * (this.state.leftFootOffset < 0)) + 'px',\n                                top: this.state.bodyHeight / 2 - this.state.leftFootOffset * (this.state.leftFootOffset > 0) + 'px'}}/>\n                    <div className=\"right foot\"\n                         style={{height: this.state.rightFootOffset * (1 - 2 * (this.state.rightFootOffset < 0)) + 'px',\n                                top: this.state.bodyHeight / 2 - this.state.rightFootOffset * (this.state.rightFootOffset > 0) + 'px'}}/>\n                </div>\n                <div className=\"body-shadow\"\n                     style={{top: this.state.bodyOffset + 'px'}}/>\n                <div className=\"body\"\n                    style={{top: this.state.bodyOffset + 'px'}}/>\n                <div className=\"balloon\" />\n                <div className=\"head\"\n                     style={{top: this.state.bodyOffset - 3.8 + 'px'}}>\n                    <div className=\"hat\" />\n                    <div className=\"flare\"\n                         style={{\n                             transform: 'rotate(-' + flareAngle + 'deg) translateY(-9px) rotate(90deg)'\n                         }}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    people: state.people\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        kill: (index) => dispatch({\n            type: 'KILL_HUMAN',\n            payload: index\n        }),\n        select: (index) => dispatch({\n            type: 'SELECT_HUMAN',\n            payload: index\n        })\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Human)","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport './Human';\nimport Human from \"./Human\";\n\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goalX: 0,\n            goalY: 0,\n            population: 0,\n            ATMDisplay: 'none',\n            menu: 'main',\n            windowNumber: 3,\n            ticketNumber: '005',\n            service: 'получить денег',\n            queueLength: 0,\n            waitForMinutes: 0,\n            waitForSeconds: 0,\n        };\n        window.number = 0;\n        window.queues = [\n            [],\n            [],\n            [],\n            [],\n            [],\n        ];\n        window.times = [\n            [],\n            [],\n            [],\n            [],\n            [],\n        ];\n        window.privacySpace = 65;\n        window.queueLength = Math.round((window.innerWidth - 740) / window.privacySpace);\n        // console.log(window.queueLength);\n        // window.queueLength = 3;\n    }\n    moveGoal = (e) => {\n        this.setState({\n            goalX: e.clientX - 5,\n            goalY: e.clientY - 5\n        });\n    };\n    componentDidMount() {\n        // document.addEventListener('click', this.moveGoal, false);\n        // setInterval(() => {\n        //     console.log(window.times);\n        // }, 1000);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.moveGoal, false);\n    }\n\n    showATM = (callback) => {\n        this.setState({\n            ATMDisplay: 'flex',\n            menu: 'main',\n        }, () => {});\n        this.callback = callback;\n    };\n\n    hideATM = () => {\n        this.setState({\n            ATMDisplay: 'none'\n        }, () => {});\n    };\n\n    toGet = () => {\n        this.setState({menu: 'get'}, () => {});\n    };\n\n    toSend = () => {\n        this.setState({menu: 'send'}, () => {});\n    };\n\n    toPay = () => {\n        this.hideATM();\n        this.callback('pay');\n    };\n\n    toChill = () => {\n        this.hideATM();\n        this.callback('chill');\n    };\n\n    toGetMail = () => {\n        this.hideATM();\n        this.callback('get-mail');\n    };\n\n    toGetBox = () => {\n        this.hideATM();\n        this.callback('get-box');\n    };\n\n    toGetMoney = () => {\n        this.hideATM();\n        this.callback('get-money');\n    };\n\n    toGetPackage = () => {\n        this.hideATM();\n        this.callback('get-package');\n    };\n\n    toSendMail = () => {\n        this.hideATM();\n        this.callback('send-mail');\n    };\n\n    toSendBox = () => {\n        this.hideATM();\n        this.callback('send-box');\n    };\n\n    toSendMoney = () => {\n        this.hideATM();\n        this.callback('send-money');\n    };\n\n    toSendDocuments = () => {\n        this.hideATM();\n        this.callback('send-documents');\n    };\n\n    humanChosen = (windowNumber, service, myNumber, code, goal) => {\n        // console.log(windowNumber, service);\n        clearInterval(this.secondInterval);\n\n        const services = {\n            'pay': 'оплатить штраф',\n            'get-mail': 'получить письмо',\n            'get-box': 'получить посылку',\n            'get-money': 'получить пенсию',\n            'get-package': 'мелкий пакет',\n            'send-mail': 'отправить письмо',\n            'send-box': 'отправить посылку',\n            'send-money': 'отправить перевод',\n            'send-documents': 'отправить документы',\n        };\n\n        // console.log(windowNumber, typeof windowNumber);\n        this.setState({\n            goal: goal\n        }, () => {});\n        this.myCode = code;\n        this.myNumber = myNumber;\n\n        let waitFor = 0;\n        for (let i = 0; i < this.myNumber + 1; i++) {\n            waitFor += window.times[windowNumber][i];\n        }\n\n        const minutes = Math.floor(waitFor / 60);\n        const seconds = waitFor % 60;\n\n        this.secondInterval = setInterval(() => {\n            let waitFor = 0;\n            for (let i = 0; i < this.myNumber + 1; i++) {\n                waitFor += window.times[windowNumber][i];\n            }\n\n            const minutes = Math.floor(waitFor / 60);\n            const seconds = waitFor % 60;\n\n            // console.log(this.myNumber);\n\n            this.setState({\n                waitForMinutes: minutes,\n                waitForSeconds: seconds,\n                queueLength: this.myNumber + 1,\n            }, () => {});\n        }, 1000);\n\n        let code2 = code.split('client')[1];\n        if (code2.length === 1) {\n            code2 = '00' + code2;\n        }\n        if (code2.length === 2) {\n            code2 = '0' + code2;\n        }\n\n        this.setState({\n            windowNumber: windowNumber,\n            service: services[service],\n            queueLength: myNumber + 1,\n            waitForMinutes: minutes,\n            waitForSeconds: seconds,\n            ticketNumber: code2,\n        }, () => {});\n    };\n\n    queued = (myNumber, code) => {\n        if (this.myCode === code) {\n            this.myNumber = myNumber;\n        }\n    };\n\n    quited = (code) => {\n        if (this.myCode === code) {\n            this.setState({\n                goal: 'quit'\n            }, () => {});\n        }\n    };\n\n    windowed = (code) => {\n        if (this.myCode === code) {\n            this.setState({\n                goal: 'window'\n            }, () => {});\n        }\n    };\n\n    updateMe =(windowNumber, service, myNumber, code, goal) => {\n      if (this.myCode === code) {\n          this.humanChosen(windowNumber, service, myNumber, code, goal);\n      }\n    };\n\n    render() {\n        const workers = [1, 2, 3, 4];\n        const workerItems = workers.map((number) =>\n            <Human x={window.innerWidth - 180} y={number * (window.innerHeight * 0.8) / 4} stepDistance={15}kind=\"worker\" deg={-90} key={'worker'+number.toString()} code={'worker'+number.toString()}/>\n        );\n        const clients = [];\n        // for (let i = 1; i < 20; i++) {\n        //     clients.push(i);\n        // }\n\n        let ticketClass = \"tickets\";\n        if (this.state.goal !== 'window') {\n            ticketClass += \" outed\";\n        }\n\n        return (\n          <div className=\"App\">\n            <div className=\"workspace\">\n                <div className=\"street\" />\n                <div className=\"post-office\">\n                    <div className=\"shadows\">\n                        <div className=\"window-shadow\" />\n                    </div>\n                    <div className=\"walls\">\n                        <div className=\"wall shadow top-left\" />\n                        <div className=\"wall shadow bottom-left\" />\n                        <div className=\"wall shadow top\" />\n                        <div className=\"wall shadow bottom\" />\n                        <div className=\"wall shadow top-right\" />\n                        <div className=\"wall shadow bottom-right\" />\n\n                        <div className=\"wall top-left\" />\n                        <div className=\"wall bottom-left\" />\n                        <div className=\"wall top\" />\n                        <div className=\"wall bottom\" />\n                        <div className=\"wall top-right\" />\n                        <div className=\"wall bottom-right\" />\n                    </div>\n\n                    <div className=\"atm\" />\n                    <div className=\"atm-shadow\" />\n\n                    <div className=\"top-stack shadow\" />\n                    <div className=\"top-stack\" />\n\n                    <div className=\"bottom-stack shadow\" />\n                    <div className=\"bottom-stack\" />\n                </div>\n                <div id=\"population\">\n                    { this.props.people.map((index) => (\n                        <Human\n                            id={index}\n                            x={Math.random() * 150}\n                               // y={index * (window.innerHeight * 0.8) / 4 * (index > 5 ? 1.5 : 1) + 200}\n                            y={window.innerHeight + 50}\n                            selected={index === this.props.selectedHuman}\n                            stepDistance={15}\n                            kind=\"client\"\n                            deg={0}\n                            key={'client'+index.toString()}\n                            code={'client'+index.toString()}\n                            showATM={this.showATM}\n                            onClick={this.humanChosen}\n                            queued={this.queued}\n                            quited={this.quited}\n                            windowed={this.windowed}\n                            update={this.updateMe}\n                        />\n                    )) }\n                    {workerItems}\n                </div>\n                <div className=\"window\" />\n            </div>\n            <div className=\"ATM\"\n                 style={{\n                     display: this.state.ATMDisplay\n                 }}>\n                <div className=\"main-group\"\n                    style={{\n                        display: this.state.menu === 'main' ? 'flex' : 'none'\n                    }}>\n                    <div className=\"item\" onClick={this.toGet}>Получить</div>\n                    <div className=\"item\" onClick={this.toSend}>Отправить</div>\n                    <div className=\"item\" onClick={this.toPay}>Оплатить штраф</div>\n                    <div className=\"item\" onClick={this.toChill}>Чилить</div>\n                </div>\n                <div className=\"get-group\"\n                     style={{\n                         display: this.state.menu === 'get' ? 'flex' : 'none'\n                     }}>\n                    <div className=\"item\" onClick={this.toGetMail}>Письмо</div>\n                    <div className=\"item\" onClick={this.toGetBox}>Посылку</div>\n                    <div className=\"item\" onClick={this.toGetMoney}>Пенсию</div>\n                    <div className=\"item\" onClick={this.toGetPackage}>Мелкий пакет</div>\n                </div>\n                <div className=\"send-group\"\n                     style={{\n                         display: this.state.menu === 'send' ? 'flex' : 'none'\n                     }}>\n                    <div className=\"item\" onClick={this.toSendMail}>Письмо</div>\n                    <div className=\"item\" onClick={this.toSendBox}>Посылку</div>\n                    <div className=\"item\" onClick={this.toSendMoney}>Перевод</div>\n                    <div className=\"item\" onClick={this.toSendDocuments}>Документы</div>\n                </div>\n            </div>\n            <div className={ticketClass}>\n                <div className=\"ticket\">\n                    <svg height=\"10\" width=\"200\">\n                        <polygon points=\"0,10 0,0 5,10 10,0 15,10 20,0 25,10 30,0 35,10 40,0 45,10 50,0 55,10 60,0 65,10 70,0 75,10 80,0 85,10 90,0 95,10 100,0 105,10 110,0 115,10 120,0 125,10 130,0 135,10 140,0 145,10 150,0 155,10 160,0 165,10 170,0 175,10 180,0 185,10 190,0 195,10 200,0 200,10\" fill=\"white\"/>\n                    </svg>\n                    <svg height=\"10\" width=\"200\">\n                        <polygon points=\"0,10 0,0 5,10 10,0 15,10 20,0 25,10 30,0 35,10 40,0 45,10 50,0 55,10 60,0 65,10 70,0 75,10 80,0 85,10 90,0 95,10 100,0 105,10 110,0 115,10 120,0 125,10 130,0 135,10 140,0 145,10 150,0 155,10 160,0 165,10 170,0 175,10 180,0 185,10 190,0 195,10 200,0 200,10\" fill=\"white\"/>\n                    </svg>\n                    <div className=\"service-label\">Услуга:</div>\n                    <span id=\"service-kind\" className=\"service-value\">{this.state.service}</span>\n                    <div className=\"ticket-number\">Бумажка №<span id=\"ticket-number\">{this.state.ticketNumber}</span></div>\n                    <div id=\"window-number\" className=\"window-number\">{this.state.windowNumber}</div>\n                    <div className=\"window-label\">окно</div>\n                    <div className=\"wait\">Ждать: <span id=\"wait-for\" className=\"stm1\">{this.state.waitForMinutes} м. {this.state.waitForSeconds} сек.</span></div>\n                    <div className=\"queue\">Очередь: <span id=\"queue-length\" className=\"stm2\">{this.state.queueLength} чел.</span></div>\n                </div>\n            </div>\n          </div>\n        );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    people: state.people,\n    selectedHuman: state.selectedHuman\n});\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    population: 1,\n    last_id: 1,\n    serviced: 0,\n    waitingTimeSum: 0,\n    selectedHuman: null,\n    people: [1]\n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CREATE_HUMAN':\n            return {\n                ...state,\n                population: state.population + 1,\n                last_id: state.last_id + 1,\n                people: [...state.people, state.last_id + 1]\n            };\n        case 'KILL_HUMAN':\n            const human_index = state.people.indexOf(action.payload);\n            let removeByIndex = (array, index) => array.filter((_, i) => i !== index);\n            return {\n                ...state,\n                population: state.population - 1,\n                people: removeByIndex(state.people, human_index)\n            };\n        case 'SELECT_HUMAN':\n            return {\n                ...state,\n                selectedHuman: action.payload\n            };\n        default:\n            return state\n    }\n};\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './store/reducers'\n\nconst store = createStore(rootReducer);\n\nconst bornInterval = setInterval(() => {\n    const rand = Math.random();\n    if (store.getState().population < 20) {\n        if (rand > 0.65) {\n            store.dispatch({type: 'CREATE_HUMAN'});\n        }\n    }\n    // console.log(rand, Math.round(rand));\n    // console.log(store.getState().last_id, store.getState().people);\n}, 1500);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}